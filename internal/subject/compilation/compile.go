// Copyright (c) 2020-2021 C4 Project
//
// This file is part of c4t.
// Licenced under the MIT licence; see `LICENSE`.

package compilation

import (
	"os"
	"path/filepath"

	"github.com/c4-project/c4t/internal/id"
)

// CompileResult is a record about an attempt to compile a subject.
type CompileResult struct {
	Result

	// RecipeID is the ID of the recipe that was used to perform this compilation.
	RecipeID id.ID `json:"recipe_id"`

	// Files contains paths to the files generated by the compilation.
	Files CompileFileset `toml:"files" json:"files"`
}

// CompileFileset is the set of file paths associated with a compiler output.
type CompileFileset struct {
	// Bin is the slashpath to this subject's compiled binary file.
	Bin string `toml:"bin,omitempty" json:"bin,omitempty"`
	// Log is the slashpath to this subject's compiler stderr log file.
	Log string `toml:"log,omitempty" json:"log,omitempty"`
}

// StripMissing removes referenced files in sp that don't exist on the filesystem.
func (c CompileFileset) StripMissing() CompileFileset {
	c.Bin = stripSingleMissing(c.Bin)
	c.Log = stripSingleMissing(c.Log)
	return c
}

func stripSingleMissing(f string) string {
	_, err := os.Stat(filepath.Clean(f))
	if os.IsNotExist(err) {
		return ""
	}
	return f
}
