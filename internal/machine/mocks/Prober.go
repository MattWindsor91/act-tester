// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	id "github.com/c4-project/c4t/internal/id"

	mock "github.com/stretchr/testify/mock"
)

// Prober is an autogenerated mock type for the Prober type
type Prober struct {
	mock.Mock
}

// Arch provides a mock function with given fields:
func (_m *Prober) Arch() (id.ID, error) {
	ret := _m.Called()

	var r0 id.ID
	if rf, ok := ret.Get(0).(func() id.ID); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(id.ID)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Hostname provides a mock function with given fields:
func (_m *Prober) Hostname() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NCores provides a mock function with given fields:
func (_m *Prober) NCores() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
