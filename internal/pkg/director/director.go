// Package director contains the top-level ACT test director, which manages a full testing campaign.
package director

import (
	"context"

	"github.com/MattWindsor91/act-tester/internal/pkg/plan"
)

// Director contains the main state and configuration for the test director.
type Director struct {
	Plan plan.Plan

	// OutDir contains the root output directory for things generated by this director.
	OutDir string
}

// Direct runs the director d over whichever test plan is loaded into it.
func (d *Director) Direct(ctx context.Context) error {
	var err error

	var ps *pathset
	if ps, err = d.prepare(); err != nil {
		return err
	}

	var fc []string
	if fc, err = d.fuzzCorpus(ps); err != nil {
		return err
	}

	return d.directMachines(ctx, ps, fc)
}

func (d *Director) prepare() (*pathset, error) {
	// TODO(@MattWindsor91)

	return nil, nil
}

func (d *Director) fuzzCorpus(_ *pathset) (corpusFiles []string, err error) {
	// TODO(@MattWindsor91)

	return nil, nil
}

func (d *Director) directMachines(ctx context.Context, ps *pathset, fc []string) error {
	return d.Plan.ParMachines(ctx, func(ectx context.Context, m plan.MachinePlan) error {
		return d.directMachine(ectx, ps, fc, m)
	})
}

func (d *Director) directMachine(_ context.Context, _ *pathset, _ []string, _ plan.MachinePlan) error {
	// TODO(@MattWindsor91)
	return nil
}
