// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	compilation "github.com/c4-project/c4t/internal/subject/compilation"

	id "github.com/c4-project/c4t/internal/id"

	mock "github.com/stretchr/testify/mock"
)

// SubjectPather is an autogenerated mock type for the SubjectPather type
type SubjectPather struct {
	mock.Mock
}

// Prepare provides a mock function with given fields: compilers
func (_m *SubjectPather) Prepare(compilers ...id.ID) error {
	_va := make([]interface{}, len(compilers))
	for _i := range compilers {
		_va[_i] = compilers[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(...id.ID) error); ok {
		r0 = rf(compilers...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubjectPaths provides a mock function with given fields: sc
func (_m *SubjectPather) SubjectPaths(sc compilation.Name) compilation.CompileFileset {
	ret := _m.Called(sc)

	var r0 compilation.CompileFileset
	if rf, ok := ret.Get(0).(func(compilation.Name) compilation.CompileFileset); ok {
		r0 = rf(sc)
	} else {
		r0 = ret.Get(0).(compilation.CompileFileset)
	}

	return r0
}
