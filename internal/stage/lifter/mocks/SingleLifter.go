// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	context "context"

	backend "github.com/MattWindsor91/act-tester/internal/model/service/backend"

	mock "github.com/stretchr/testify/mock"

	recipe "github.com/MattWindsor91/act-tester/internal/model/recipe"

	service "github.com/MattWindsor91/act-tester/internal/model/service"
)

// SingleLifter is an autogenerated mock type for the SingleLifter type
type SingleLifter struct {
	mock.Mock
}

// Lift provides a mock function with given fields: ctx, j, sr
func (_m *SingleLifter) Lift(ctx context.Context, j backend.LiftJob, sr service.Runner) (recipe.Recipe, error) {
	ret := _m.Called(ctx, j, sr)

	var r0 recipe.Recipe
	if rf, ok := ret.Get(0).(func(context.Context, backend.LiftJob, service.Runner) recipe.Recipe); ok {
		r0 = rf(ctx, j, sr)
	} else {
		r0 = ret.Get(0).(recipe.Recipe)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, backend.LiftJob, service.Runner) error); ok {
		r1 = rf(ctx, j, sr)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
