// Code generated by mockery v2.4.0. DO NOT EDIT.

package mocks

import (
	context "context"
	io "io"

	mock "github.com/stretchr/testify/mock"

	service "github.com/MattWindsor91/c4t/internal/model/service"

	time "time"
)

// Runner is an autogenerated mock type for the Runner type
type Runner struct {
	mock.Mock
}

// Run provides a mock function with given fields: ctx, r
func (_m *Runner) Run(ctx context.Context, r service.RunInfo) error {
	ret := _m.Called(ctx, r)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, service.RunInfo) error); ok {
		r0 = rf(ctx, r)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WithGrace provides a mock function with given fields: d
func (_m *Runner) WithGrace(d time.Duration) service.Runner {
	ret := _m.Called(d)

	var r0 service.Runner
	if rf, ok := ret.Get(0).(func(time.Duration) service.Runner); ok {
		r0 = rf(d)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.Runner)
		}
	}

	return r0
}

// WithStderr provides a mock function with given fields: w
func (_m *Runner) WithStderr(w io.Writer) service.Runner {
	ret := _m.Called(w)

	var r0 service.Runner
	if rf, ok := ret.Get(0).(func(io.Writer) service.Runner); ok {
		r0 = rf(w)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.Runner)
		}
	}

	return r0
}

// WithStdout provides a mock function with given fields: w
func (_m *Runner) WithStdout(w io.Writer) service.Runner {
	ret := _m.Called(w)

	var r0 service.Runner
	if rf, ok := ret.Get(0).(func(io.Writer) service.Runner); ok {
		r0 = rf(w)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(service.Runner)
		}
	}

	return r0
}
