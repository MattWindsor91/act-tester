.nh
.TH c4t\-gccnt 8

.SH NAME
.PP
c4t\-gccnt \- wraps gcc with various optional failure modes


.SH SYNOPSIS
.PP
c4t\-gccnt

.PP
.RS

.nf
[\-\-O0]
[\-\-O1]
[\-\-O2]
[\-\-O3]
[\-\-Ofast]
[\-\-Og]
[\-\-Os]
[\-\-Oz]
[\-\-march]=[value]
[\-\-mcpu]=[value]
[\-\-nt\-bin]=[value]
[\-\-nt\-diverge\-mutant\-period]=[value]
[\-\-nt\-diverge\-opt]=[value]
[\-\-nt\-dryrun]
[\-\-nt\-error\-mutant\-period]=[value]
[\-\-nt\-error\-opt]=[value]
[\-\-nt\-hit\-mutant\-period]=[value]
[\-\-nt\-mutant]=[value]
[\-\-pthread]
[\-\-std]=[value]
[\-O]
[\-o]=[value]

.fi
.RE

.PP
\fBUsage\fP:

.PP
.RS

.nf
c4t\-gccnt [GLOBAL OPTIONS] command [COMMAND OPTIONS] [ARGUMENTS...]

.fi
.RE


.SH GLOBAL OPTIONS
.PP
\fB\-\-O0\fP: optimisation level '0'

.PP
\fB\-\-O1\fP: optimisation level '1'

.PP
\fB\-\-O2\fP: optimisation level '2'

.PP
\fB\-\-O3\fP: optimisation level '3'

.PP
\fB\-\-Ofast\fP: optimisation level 'fast'

.PP
\fB\-\-Og\fP: optimisation level 'g'

.PP
\fB\-\-Os\fP: optimisation level 's'

.PP
\fB\-\-Oz\fP: optimisation level 'z'

.PP
\fB\-\-march\fP="": architecture optimisation \fB\fCspec\fR to pass through to gcc

.PP
\fB\-\-mcpu\fP="": cpu optimisation \fB\fCspec\fR to pass through to gcc

.PP
\fB\-\-nt\-bin\fP="": the 'real' compiler \fB\fCcommand\fR to run (default: gcc)

.PP
\fB\-\-nt\-diverge\-mutant\-period\fP="": diverge when the mutant number is a multiple of this \fB\fCperiod\fR (default: 0)

.PP
\fB\-\-nt\-diverge\-opt\fP="": optimisation \fB\fClevels\fR (minus the '\-O') on which gccn't should diverge

.PP
\fB\-\-nt\-dryrun\fP: print the outcome of running gccn't instead of doing it

.PP
\fB\-\-nt\-error\-mutant\-period\fP="": error when the mutant number is a multiple of this \fB\fCperiod\fR (default: 0)

.PP
\fB\-\-nt\-error\-opt\fP="": optimisation \fB\fClevels\fR (minus the '\-O') on which gccn't should exit with an error

.PP
\fB\-\-nt\-hit\-mutant\-period\fP="": report a hit when the mutant number is a multiple of this \fB\fCperiod\fR (default: 0)

.PP
\fB\-\-nt\-mutant\fP="": the mutant \fB\fCnumber\fR to use if simulating mutation testing (default: 0)

.PP
\fB\-\-pthread\fP: passes through pthread to gcc

.PP
\fB\-\-std\fP="": \fB\fCstandard\fR to pass through to gcc

.PP
\fB\-O\fP: optimisation level ''

.PP
\fB\-o\fP="": output file (default: a.out)
